name: Terraform Deploy Infra

run-name: Terraform Deploy Infra on ${{ inputs.Env }}

on:
  push:
    branches:
      - test-terraform
  workflow_dispatch:
    inputs:
      Env:
        type: choice
        description: 'Environment'
        required: true
        options:
          - T1
          - PRD
 
jobs:
  configure-environment:
    runs-on: ubuntu-24.04
    outputs:
      env: ${{ steps.set-env.outputs.env }}
    steps:
      - name: Set Environment Variable if it is not provided
        id: set-env
        run: |
          if [ -z "${{ inputs.Env }}"]; then
            echo "env=T1" >> $GITHUB_OUTPUT
          else
            echo "env=${{ inputs.Env }}" >> $GITHUB_OUTPUT
          fi

  infra-deploy:
    runs-on: ubuntu-24.04
    environment: ${{ needs.configure-environment.outputs.env }}
    needs: configure-environment
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v4

      - uses: qetza/replacetokens-action@v1
        with:
          sources: 'terraform/terraform.tfvars'
          variables: '[${{ toJson(secrets)}}]'
          token-prefix: '#{'
          token-suffix: '}#'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Test Terraform cli 
        run: terraform version

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init         

      - name: Terraform Plan Validation 
        working-directory: ./terraform
        run: terraform plan -input=false -out=tfplan

      - name: Check Terraform Plan 
        working-directory: ./terraform
        if: github.ref == 'refs/heads/test-terraform'
        run: terraform show -json tfplan | jq . > plan.json
